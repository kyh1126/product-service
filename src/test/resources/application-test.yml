logging:
  level:
    root: info
    org:
      hibernate:
        type:
          descriptor:
            sql: trace
spring:
  data:
    web:
      pageable:
        default-page-size: 50
        max-page-size: 1000
  main:
    allow-bean-definition-overriding: true  # Bean 오버라이딩 활성화
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: false
    open-in-view: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        connection:
          release_mode: on_close
        dialect:
          storage-engine: innodb
          format_sql: true
        show_sql: true
        format_sql: true
  datasource:
    url: jdbc:tc:mysql:///fn_product
    username: root
    password: root
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
  redis: # redis config add
    host: localhost
    port: 6379
  cache:
    redis:
      time-to-live: 1h
sfn:
  aws:
    region: ap-northeast-2
    sqs:
      endpoint: http://localhost:4566
    message: # SNS, SQS
      access-key: test
      secret-key: test
  async:
    poolSize: 10
  swagger:
    host: localhost:4008
    size:
      value: "페이지 크기 (default: ${spring.data.web.pageable.default-page-size})"
  service:
    fn-message: ${FN_MESSAGE_BASE_URL:https://s-api-dev.smartfoodnet.com/fresh-networks/fn-message}
    fn-warehouse-management-service: ${FN_WMS_BASE_URL:http://fn-warehouse-service.sfn-dev:4001}/fresh-networks/fn-warehouse-service

sqs:
  queues:
    fn-product:
      basic-product-created:
        name: ${SQS_BASIC_PRODUCT_CREATED_NAME:basic-product-created.fifo}
        arn: ${SQS_BASIC_PRODUCT_CREATED_ARN:uninitialized}
